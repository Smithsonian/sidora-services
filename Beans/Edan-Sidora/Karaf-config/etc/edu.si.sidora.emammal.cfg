################################################################################
#
#   Copyright 2015 Smithsonian Institution.
#   
#   Licensed under the Apache License, Version 2.0 (the "License"); you may not
#   use this file except in compliance with the License.You may obtain a copy of
#   the License at: http://www.apache.org/licenses/
#   
#   This software and accompanying documentation is supplied without
#   warranty of any kind. The copyright holder and the Smithsonian Institution:
#   (1) expressly disclaim any warranties, express or implied, including but not
#   limited to any implied warranties of merchantability, fitness for a
#   particular purpose, title or non-infringement; (2) do not assume any legal
#   liability or responsibility for the accuracy, completeness, or usefulness of
#   the software; (3) do not represent that use of the software would not
#   infringe privately owned rights; (4) do not warrant that the software
#   is error-free or will be maintained, supported, updated or enhanced;
#   (5) will not be liable for any indirect, incidental, consequential special
#   or punitive damages of any kind or nature, including but not limited to lost
#   profits or loss of data, on any basis arising from contract, tort or
#   otherwise, even if any of the parties has been warned of the possibility of
#   such loss or damage.
#   
#   his distribution includes several third-party libraries, each with their own
#   license terms. For a complete copy of all copyright and license terms, including
#   those of third-party libraries, please see the product release notes.
#
################################################################################

# The properties defined in this file will be made available through karaf config properties
# and you can update through the karaf admin console to change the value 
# 
# 
# For example, you may edit an existing property configured in this file via the SMX client commands and propagate the changes
#
# config:edit edu.si.sidora.emammal
# config:property-set si.ct.edanIds.dryrun true
# config:update


########################################################
#
# EDAN and IDS properties
#
########################################################

# enable parallel processing for camel split and aggregators
si.ct.edanIds.parallelProcessing = ${si.ct.edanIds.parallelProcessing}

# number seda concurrent consumers (default seda concurrentConsumers is 20)
si.ct.edanIds.concurrentConsumers = ${si.ct.edanIds.concurrentConsumers}

# Pool size for ThreadPoolExecutor used for writing images to ids dropbox
si.ct.edanIds.corePoolSize = ${si.ct.edanIds.corePoolSize}
si.ct.edanIds.maximumPoolSize = ${si.ct.edanIds.maximumPoolSize}

# seda queue size for processing ct ingest jms messages
si.ct.edanIds.ct.deployment.queue.size = ${si.ct.edanIds.ct.deployment.queue.size}

########################################################
# si.ct.edanIds.xml2json.keepStrings
#
# If true, then values will not be coerced into boolean
# or numeric values and will instead be left as strings
# All values are converted as strings, for 1, 01, 29.0 will not be coerced to
# numbers but will instead be the exact value as seen in the XML document.
########################################################
si.ct.edanIds.xml2json.keepStrings = ${si.ct.edanIds.xml2json.keepStrings}

# number of records to send for edan api request
si.ct.edanIds.edan.bulk.size = ${si.ct.edanIds.edan.bulk.size}

# complete timeout for edan bulk aggrigation (set long enough for bulk size to be hit first)
si.ct.edanIds.edan.bulk.completionTimeout = ${si.ct.edanIds.edan.bulk.completionTimeout}


si.ct.edanIds.redeliveryDelay = ${si.ct.edanIds.redeliveryDelay}
min.edan.redeliveries = ${min.edan.redeliveries}
min.edan.http.redeliveries = ${min.edan.http.redeliveries}

# For testing edan requests using the edan-test-util bundle in SMX use
#si.ct.uscbi.server=http://localhost:1101/cxf/edan
si.ct.uscbi.server=${si.ct.uscbi.server}

si.ct.uscbi.edanService = ${si.ct.uscbi.edanService}

si.ct.uscbi.appId=${si.ct.uscbi.appId}

si.ct.uscbi.edanKey=${si.ct.uscbi.edanKey}

si.ct.uscbi.extra_property=${si.ct.uscbi.extra_property}

si.ct.uscbi.edan_type=emammal_image

si.ct.uscbi.authType=1

si.ct.uscbi.idsPushLocation=${si.ct.uscbi.idsPushLocation}

si.ct.edanids.speciesScientificName.filter = Bicycle, Blank, Calibration Photos, Camera Misfire, Camera Trapper, False trigger, Homo sapien, Homo sapiens, No Animal, Setup Pickup, Time Lapse, Vehicle

si.ct.wi.speciesScientificNameFaceBlur.filter = Bicycle, Calibration Photos, Camera Trapper, Homo sapien, Homo sapiens, Setup Pickup, Time Lapse, Vehicle

si.ct.wi.faceBlur.script = ${si.ct.wi.faceBlur.script}

si.ct.wi.faceBlur.blur_value = 99

si.ct.wi.faceBlur.classifier = ${si.ct.wi.faceBlur.classifier}

# flag for enabling EDAN batch requests
si.ct.batchEnabled=false

# jms queue for processing fedora related messages
edanIds.queue = ${edanIds.queue}

# jms queue for processing ct ingest related messages
edanIds.ct.queue = ${edanIds.ct.queue}

###################################### DEPRECATED #########################################
# JMS Selector used to only process messages that meet the following criteria:
# Fedora Related Messages must meet the following criteria to be selected for processing:
# - user author name/origin not equal to the camel user name that the Camera Trap ingest uses
# - and only OBJ datastreams
# - and where dsLabel does not contain "Observations" filtering out OBJ datastreams for Researcher Observations, Volunteer Observations, and Image Observations
# - and methodNames equal addDatastream, modifyDatastreamByValue, modifyDatastreamByReference, modifyObject, or ingest
# - and where the pid contains "ct:"
# Camera Trap Ingest related messages must meet the following criteria to be selected for processing:
# - addEdanIds header present and equals true
###############################################################################

#edanIds.selector = (XPATH '/*[local-name()=''entry'']/*[local-name()=''author'']/*[local-name()=''name''] != ''{{si.fedora.user}}'' and /*[local-name()=''entry'']/*[local-name()=''category''][@scheme=''fedora-types:dsID'']/@term = ''OBJ'' and not(contains(/*[local-name()=''entry'']/*[local-name()=''category''][@scheme=''fedora-types:dsLabel'']/@term,''Observations''))' and methodName IN ('addDatastream','modifyDatastreamByValue','modifyDatastreamByReference','modifyObject','ingest','purgeDatastream') and pid LIKE '{{si.ct.namespace}}:%') or addEdanIds = 'true'

#############################################################################
# Broker URL used for ActiveMQConnectionFactory
#
# For testing use:
# broker.url = vm://localhost?broker.persistent=false&broker.useJmx=false
#
#############################################################################

broker.url = ${broker.url}

############################################
# Prefix for IDS asset file and image files
############################################
si.edu.idsAssetFilePrefix = ExportEmammal_emammal_image_
si.edu.idsAssetImagePrefix = emammal_image_