<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2015-2016 Smithsonian Institution.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License"); you may not
  ~ use this file except in compliance with the License.You may obtain a copy of
  ~ the License at: http://www.apache.org/licenses/
  ~
  ~ This software and accompanying documentation is supplied without
  ~ warranty of any kind. The copyright holder and the Smithsonian Institution:
  ~ (1) expressly disclaim any warranties, express or implied, including but not
  ~ limited to any implied warranties of merchantability, fitness for a
  ~ particular purpose, title or non-infringement; (2) do not assume any legal
  ~ liability or responsibility for the accuracy, completeness, or usefulness of
  ~ the software; (3) do not represent that use of the software would not
  ~ infringe privately owned rights; (4) do not warrant that the software
  ~ is error-free or will be maintained, supported, updated or enhanced;
  ~ (5) will not be liable for any indirect, incidental, consequential special
  ~ or punitive damages of any kind or nature, including but not limited to lost
  ~ profits or loss of data, on any basis arising from contract, tort or
  ~ otherwise, even if any of the parties has been warned of the possibility of
  ~ such loss or damage.
  ~
  ~ This distribution includes several third-party libraries, each with their own
  ~ license terms. For a complete copy of all copyright and license terms, including
  ~ those of third-party libraries, please see the product release notes.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>edu.si.services</groupId>
        <artifactId>beans</artifactId>
        <version>1.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <groupId>edu.si.services.beans</groupId>
    <artifactId>edansidora</artifactId>
    <packaging>bundle</packaging>
    <version>1.0</version>

    <name>SI :: Services :: Beans :: EDAN and IDS Camera Trap</name>

    <properties>
        <servicemix.osgi.dynamic.import>*</servicemix.osgi.dynamic.import>

        <!-- Unit Test Properties-->
        <karaf.home>${project.build.directory}/test-classes</karaf.home>
    </properties>

    <dependencies>
        <!-- must be first to avoid library conflict, Only needed during testing so scope is test -->
        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm-all</artifactId>
        </dependency>

        <!--  osgi -->
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.compendium</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-blueprint</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test-blueprint</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>edu.si.services.beans</groupId>
            <artifactId>CameraTrap</artifactId>
            <version>1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>edu.si.services.camel</groupId>
            <artifactId>FedoraRepo</artifactId>
            <version>1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>edu.si.services.camel</groupId>
            <artifactId>FcrepoRest</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>edu.si.services.beans</groupId>
            <artifactId>VelocityToolsHandler</artifactId>
            <version>1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>edu.si.services.camel</groupId>
            <artifactId>Reader</artifactId>
            <version>1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>edu.si.services.camel</groupId>
            <artifactId>Thumbnailator</artifactId>
            <version>1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>edu.si.services.camel</groupId>
            <artifactId>Extractor</artifactId>
            <version>1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-cxf</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http-jetty</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-csv</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-groovy</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-velocity</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.servicemix.bundles</groupId>
            <artifactId>org.apache.servicemix.bundles.velocity-tools</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-saxon</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-schematron</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-exec</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-aws</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-http</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>xmlunit</groupId>
            <artifactId>xmlunit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.woodstox</groupId>
            <artifactId>woodstox-core-asl</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-configuration2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Test Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- edansidora -->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-core</artifactId>
            <version>3.1.4</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxrs</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore-osgi</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient-osgi</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- edan test service -->
        <!--<dependency>
            <groupId>edu.si.services</groupId>
            <artifactId>edan-test-util</artifactId>
            <version>1.0</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-slf4j-impl</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>-->

    </dependencies>

    <build>
        <defaultGoal>install</defaultGoal>

        <!-- Copy test resources to output folder target/test-classes -->
        <testResources>
            <!-- don't forget to specify the default test resources directory -->
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>

            <testResource>
                <directory>Karaf-config</directory>
                <!--<targetPath>${basedir}/target/test-classes/etc</targetPath>-->
            </testResource>
            <testResource>
                <directory>../../Routes/Camera Trap/Karaf-config/etc</directory>
                <targetPath>${basedir}/target/test-classes/etc</targetPath>
            </testResource>
            <testResource>
                <directory>../../Routes/Camera Trap/Input</directory>
                <targetPath>${basedir}/target/test-classes/Input</targetPath>
            </testResource>
            <testResource>
                <directory>../../Routes/Camera Trap/Route</directory>
                <targetPath>${basedir}/target/test-classes/Routes</targetPath>
            </testResource>
            <testResource>
                <directory>../../Routes/WCS/Route</directory>
                <targetPath>${basedir}/target/test-classes/Routes</targetPath>
            </testResource>

        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>

            <!-- to generate the MANIFEST-FILE of the bundle -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>edu.si.services.beans.edansidora</Bundle-SymbolicName>
                        <!--<Private-Package>edu.si.services.*</Private-Package>
                        <Import-Package>*</Import-Package>-->

                        <!--<Embed-Dependency>*;scope=compile|runtime</Embed-Dependency>-->
                        <!--<Embed-Transitive>true</Embed-Transitive>-->
                        <!--<Import-Package>org.apache.camel.osgi,*;resolution:=optional</Import-Package>-->
                        <Export-Package>edu.si.services.beans.edansidora</Export-Package>
                        <DynamicImport-Package>${servicemix.osgi.dynamic.import}</DynamicImport-Package>

                        <!--<Bundle-Description>${project.description}</Bundle-Description>
                        <Import-Package>org.apache.camel.osgi,*;resolution:=optional</Import-Package>
                        <Private-Package>edu.si.services.beans.edansidora</Private-Package>
                        <DynamicImport-Package>${servicemix.osgi.dynamic.import}</DynamicImport-Package>-->
                    </instructions>
                </configuration>
            </plugin>

            <!-- to run the example using mvn camel:run -->
            <plugin>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-maven-plugin</artifactId>
                <configuration>
                    <useBlueprint>true</useBlueprint>
                </configuration>
            </plugin>

            <!-- reserve network ports for integration testing -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <configuration>
                    <portNames>
                        <portName>dynamic.test.port</portName>
                    </portNames>
                </configuration>
                <executions>
                    <execution>
                        <!-- we choose this phase to ensure that the chosen port number is available for test resource filtering, specifically
                          into fedora.fcfg -->
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/*_IT</exclude>
                    </excludes>
                    <systemPropertyVariables>
                        <buildDirectory>${project.build.directory}</buildDirectory>
                        <karaf.home>${karaf.home}</karaf.home>
                        <si.fits.host>http://localhost:8080/fits-1.1.3</si.fits.host>
                        <si.fuseki.host>http://localhost:9080/fuseki</si.fuseki.host>
                        <si.fedora.host>http://localhost:8080/fedora</si.fedora.host>
                        <si.fedora.user>fedoraAdmin</si.fedora.user>
                        <si.fedora.password>fc</si.fedora.password>
                        <si.sidora.edan.host>http://localhost:1101/edan</si.sidora.edan.host>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <buildDirectory>${project.build.directory}</buildDirectory>
                        <karaf.home>${karaf.home}</karaf.home>
                        <si.fits.host>http://localhost:8080/fits-1.1.3</si.fits.host>
                        <si.fuseki.host>http://localhost:9080/fuseki</si.fuseki.host>
                        <si.fedora.host>http://localhost:8080/fedora</si.fedora.host>
                        <si.fedora.user>fedoraAdmin</si.fedora.user>
                        <si.fedora.password>fc</si.fedora.password>
                        <si.sidora.edan.host>http://localhost:1101/edan</si.sidora.edan.host>
                    </systemPropertyVariables>
                    <includes>
                        <include>**/*_IT</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
