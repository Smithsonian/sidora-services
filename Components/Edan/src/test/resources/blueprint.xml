<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2018-2019 Smithsonian Institution.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License"); you may not
  ~ use this file except in compliance with the License.You may obtain a copy of
  ~ the License at: http://www.apache.org/licenses/
  ~
  ~ This software and accompanying documentation is supplied without
  ~ warranty of any kind. The copyright holder and the Smithsonian Institution:
  ~ (1) expressly disclaim any warranties, express or implied, including but not
  ~ limited to any implied warranties of merchantability, fitness for a
  ~ particular purpose, title or non-infringement; (2) do not assume any legal
  ~ liability or responsibility for the accuracy, completeness, or usefulness of
  ~ the software; (3) do not represent that use of the software would not
  ~ infringe privately owned rights; (4) do not warrant that the software
  ~ is error-free or will be maintained, supported, updated or enhanced;
  ~ (5) will not be liable for any indirect, incidental, consequential special
  ~ or punitive damages of any kind or nature, including but not limited to lost
  ~ profits or loss of data, on any basis arising from contract, tort or
  ~ otherwise, even if any of the parties has been warned of the possibility of
  ~ such loss or damage.
  ~
  ~ This distribution includes several third-party libraries, each with their own
  ~ license terms. For a complete copy of all copyright and license terms, including
  ~ those of third-party libraries, please see the product release notes.
  -->

<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
		   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		   xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
		   xsi:schemaLocation="
         http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
         http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
         http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd">

	<!-- OSGI blueprint property placeholder -->
	<!-- The properties should not be changed from karaf or external cfg if there are deployments currently being ingested
        as it would cause the camel context to reload and error out any in-flight ingestion processes. -->
	<cm:property-placeholder id="sidora.karaf.emammal.properties" persistent-id="edu.si.sidora.emammal" update-strategy="none">
		<cm:default-properties>
			<cm:property name="edu.si.edanIds" value="edu.si.edanIds"/>
		</cm:default-properties>
	</cm:property-placeholder>

	<bean id="edan" class="edu.si.services.camel.edan.EdanComponent">
		<property name="edanBaseUrl" value="${si.ct.uscbi.server}"/>
		<property name="app_id" value="${si.ct.uscbi.appId}"/>
		<property name="edan_key" value="${si.ct.uscbi.edanKey}"/>
	</bean>

	<!--<bean id="edan" class="edu.si.services.camel.edan.EdanComponent">
		<argument ref="edanConfig"/>
	</bean>

	<bean id="edanConfig" class="edu.si.services.camel.edan.EdanConfiguration">
		<property name="edanBaseUrl" value="${si.ct.uscbi.server}"/>
		<property name="app_id" value="${si.ct.uscbi.appId}"/>
		<property name="edan_key" value="${si.ct.uscbi.edanKey}"/>
	</bean>-->

	<!--<bean id="edanIdsRoutes" class="edu.si.services.camel.edan.EDANSidoraRouteBuilder"/>-->

	<camelContext id="EdanTestBlueprintContext" xmlns="http://camel.apache.org/schema/blueprint">

		<!-- Using a Camel properties component and referring to the blueprint property placeholder by its ID. -->
		<propertyPlaceholder id="properties"
							 location="blueprint:sidora.karaf.emammal.properties,file:${karaf.home}/etc/system.properties,file:${karaf.home}/etc/edu.si.sidora.karaf.cfg"/>

		<!--<routeBuilder ref="edanIdsRoutes"/>-->

		<route id="testEdanComponent">
			<from uri="direct:start"/>
			<toD uri="edan:getContent?edanId=${body}" id="edanComponentCall"/>
			<log message="Edan response body contains:\n ${body}"/>
			<to uri="mock:result"/>
		</route>
	</camelContext>

</blueprint>
