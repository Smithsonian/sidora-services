<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2015-2016 Smithsonian Institution.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License"); you may not
  ~ use this file except in compliance with the License.You may obtain a copy of
  ~ the License at: http://www.apache.org/licenses/
  ~
  ~ This software and accompanying documentation is supplied without
  ~ warranty of any kind. The copyright holder and the Smithsonian Institution:
  ~ (1) expressly disclaim any warranties, express or implied, including but not
  ~ limited to any implied warranties of merchantability, fitness for a
  ~ particular purpose, title or non-infringement; (2) do not assume any legal
  ~ liability or responsibility for the accuracy, completeness, or usefulness of
  ~ the software; (3) do not represent that use of the software would not
  ~ infringe privately owned rights; (4) do not warrant that the software
  ~ is error-free or will be maintained, supported, updated or enhanced;
  ~ (5) will not be liable for any indirect, incidental, consequential special
  ~ or punitive damages of any kind or nature, including but not limited to lost
  ~ profits or loss of data, on any basis arising from contract, tort or
  ~ otherwise, even if any of the parties has been warned of the possibility of
  ~ such loss or damage.
  ~
  ~ This distribution includes several third-party libraries, each with their own
  ~ license terms. For a complete copy of all copyright and license terms, including
  ~ those of third-party libraries, please see the product release notes.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>edu.si.services</groupId>
        <artifactId>camel</artifactId>
        <version>1.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <groupId>edu.si.services.camel</groupId>
    <artifactId>FedoraRepo</artifactId>
    <packaging>bundle</packaging>
    <version>1.0</version>

    <name>SI :: Services :: Components :: Fedora Commons</name>
    <!-- <url>http://oris.si.edu/sidora</url> -->

    <properties>
        <servlet.port>8080</servlet.port>
        <!-- Dynamic test port to use when creating/running test in combination with cargo:run to keep fedora and fuseki up -->
        <!--<dynamic.test.port>40994</dynamic.test.port>-->
        <fedora.home>${project.build.directory}/fedora-home</fedora.home>
        <fuseki.base>${project.build.directory}/fuseki-base</fuseki.base>
    </properties>

    <dependencies>

        <dependency>
            <groupId>com.yourmediashelf.fedora.client</groupId>
            <artifactId>fedora-client-core</artifactId>
            <scope>compile</scope>
            <exclusions>
                <exclusion> 
                    <groupId>org.slf4j</groupId>
                    <artifactId>jcl-over-slf4j</artifactId>
                </exclusion>
                <exclusion> 
                    <groupId>org.slf4j</groupId>
                    <artifactId>log4j-over-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-bundle</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Integration Testing gear -->
        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-fuseki-war</artifactId>
            <type>war</type>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-log4j12</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>edu.si.trippi</groupId>
            <artifactId>trippi-sparql-fcrepo-webapp</artifactId>
            <type>war</type>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <defaultGoal>install</defaultGoal>

        <testResources>
            <!-- don't forget to specify the default test resources directory -->
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>

            <testResource>
                <directory>../../Sidora-Test-Utils/src/test/resources/fedora-home</directory>
                <targetPath>${fedora.home}</targetPath>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>../../Sidora-Test-Utils/src/test/resources/fuseki-base</directory>
                <targetPath>${fuseki.base}</targetPath>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>../../Sidora-Test-Utils/src/test/resources/foxml</directory>
                <targetPath>${project.build.directory}/foxml</targetPath>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>
      
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
      
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>

            <!-- To generate the MANIFEST-FILE of the bundle. -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>edu.si.services.FedoraRepo</Bundle-SymbolicName>
                        <Export-Service>org.apache.camel.spi.ComponentResolver;component=fedora</Export-Service>
                        <Import-Package>*;resolution:="optional"</Import-Package>
                        <Embed-Dependency>*;scope=compile|runtime</Embed-Dependency>
                        <Embed-Transitive>true</Embed-Transitive>
                        <!--<DynamicImport-Package>com.fasterxml.jackson.*</DynamicImport-Package>-->
                        <Export-Package>
                            edu.si.services.fedorarepo,
                            edu.si.services.fedorarepo.aggregators,
                            edu.si.services.fedorarepo.datastream,
                            edu.si.services.fedorarepo.ingest,
                            edu.si.services.fedorarepo.pid,
                            edu.si.services.fedorarepo.search
                        </Export-Package>
                        <Private-Package>edu.si.services.fedorarepo.*</Private-Package>
                    </instructions>
                </configuration>
            </plugin>

            <!-- reserve network ports for integration testing -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <configuration>
                    <portNames>
                        <portName>dynamic.test.port</portName>
                    </portNames>
                </configuration>
                <executions>
                    <execution>
                        <!-- we choose this phase to ensure that the chosen port number is available for test resource filtering, specifically
                          into fedora.fcfg -->
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/*IntegrationTest</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <dynamic.test.port>${dynamic.test.port}</dynamic.test.port>
                        <buildDirectory>${project.build.directory}</buildDirectory>
                        <si.fuseki.host>http://localhost:${dynamic.test.port}/jena-fuseki-war</si.fuseki.host>
                        <si.fedora.host>http://localhost:${dynamic.test.port}/trippi-sparql-fcrepo-webapp</si.fedora.host>
                        <si.fedora.user>fedoraAdmin</si.fedora.user>
                        <si.fedora.password>fc</si.fedora.password>
                    </systemPropertyVariables>
                    <includes>
                        <include>**/*_IT</include>
                        <include>**/*IntegrationTest</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <configuration>
                    <container>
                        <containerId>tomcat7x</containerId>
                        <type>embedded</type>
                        <systemProperties>
                            <fedora.home>${fedora.home}</fedora.home>
                            <FUSEKI_BASE>${fuseki.base}</FUSEKI_BASE>
                            <!-- keep Apache Derby as quiet as possible -->
                            <derby.stream.error.field>java.lang.System.err</derby.stream.error.field>
                            <derby.stream.error.logSeverityLevel>5000</derby.stream.error.logSeverityLevel>
                        </systemProperties>
                        <log>${project.build.directory}/cargo.log</log>
                        <timeout>900000</timeout>
                    </container>
                    <configuration>
                        <properties>
                            <cargo.logging>high</cargo.logging>
                            <cargo.servlet.uriencoding>UTF-8</cargo.servlet.uriencoding>
                            <cargo.jvmargs>-Xmx512m</cargo.jvmargs>
                            <cargo.servlet.port>${dynamic.test.port}</cargo.servlet.port>
                            <!--<cargo.maven.wait>false</cargo.maven.wait>-->
                            <!-- fire AJP into /dev/null -->
                            <cargo.tomcat.ajp.port>0</cargo.tomcat.ajp.port>
                        </properties>
                    </configuration>
                    <deployer>
                        <!-- empty deployer element prevents Cargo from trying to deploy our project, which is a bundle, into
                        Tomcat -->
                    </deployer>
                    <deployables>
                        <deployable>
                            <groupId>org.apache.jena</groupId>
                            <artifactId>jena-fuseki-war</artifactId>
                            <type>war</type>
                        </deployable>
                        <deployable>
                            <groupId>edu.si.trippi</groupId>
                            <artifactId>trippi-sparql-fcrepo-webapp</artifactId>
                            <type>war</type>
                        </deployable>
                    </deployables>
                </configuration>
                <executions>
                    <execution>
                        <id>start-tomcat</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-tomcat</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
