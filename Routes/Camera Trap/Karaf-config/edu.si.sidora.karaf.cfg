################################################################################
#
#   Copyright 2015 Smithsonian Institution.
#
#   Licensed under the Apache License, Version 2.0 (the "License"); you may not
#   use this file except in compliance with the License.You may obtain a copy of
#   the License at: http://www.apache.org/licenses/
#
#   This software and accompanying documentation is supplied without
#   warranty of any kind. The copyright holder and the Smithsonian Institution:
#   (1) expressly disclaim any warranties, express or implied, including but not
#   limited to any implied warranties of merchantability, fitness for a
#   particular purpose, title or non-infringement; (2) do not assume any legal
#   liability or responsibility for the accuracy, completeness, or usefulness of
#   the software; (3) do not represent that use of the software would not
#   infringe privately owned rights; (4) do not warrant that the software
#   is error-free or will be maintained, supported, updated or enhanced;
#   (5) will not be liable for any indirect, incidental, consequential special
#   or punitive damages of any kind or nature, including but not limited to lost
#   profits or loss of data, on any basis arising from contract, tort or
#   otherwise, even if any of the parties has been warned of the possibility of
#   such loss or damage.
#
#   his distribution includes several third-party libraries, each with their own
#   license terms. For a complete copy of all copyright and license terms, including
#   those of third-party libraries, please see the product release notes.
#
################################################################################

# The properties defined in this file will be made available through karaf config properties
# and you can update through the karaf admin console to change the value
#
#
# For example, you may edit an existing property configured in this file via the SMX client commands and propagate the changes
#
# config:edit edu.si.sidora.karaf
# config:property-set si.ct.wcs.dryrun true
# config:update



########################################################
#
# SCBI properties
#
########################################################

# Properties used to identify the SCBI CT route logs
si.ct.id=edu.si.ctingest
si.ct.pipeline=CameraTrapIngest

# Controls the SCBI CT routes to process deployments in a dry-run mode without the actual ingestions into Fedora
# not required and defaults to false
si.ct.scbi.dryrun=false

# Boolean that controls enabling of the automatic S3 sync (pull/push) of the SCBI deployments
# not required and defaults to false
si.ct.scbi.enableS3Routes=false

# AWS access key used for deployments automatic pulldown from S3 approved buckets
# required if si.ct.scbi.enableS3Routes is set to true
si.ct.scbi.aws.accessKey=<some_access_key>

# AWS secret key used for deployments automatic pulldown from S3 approved buckets
# required if si.ct.scbi.enableS3Routes is set to true
si.ct.scbi.aws.secretKey=<some_secret_key>

# threshold for the number of processing files in the local file system path for the deployment process directory
# required
si.ct.scbi.process.dir.threshold=10

# local file system path for ingesting ready to process deployments
# required
si.ct.scbi.process.dir.path=/opt/sidora/smx/Process

# local file system path for staging deployments during automatic s3 pulldown workflow process
# required
si.ct.scbi.stage.dir.path=/opt/sidora/smx/ProcessAWS

# AWS S3 bucket name for pulling down approved SCBI deployments
# required if si.ct.scbi.enableS3Routes is set to true
si.ct.scbi.s3.approved.bucketName=<some_bucket_name_for_approved>

# AWS S3 bucket name for pushing successfully ingested SCBI deployments
# required if si.ct.scbi.enableS3Routes is set to true
si.ct.scbi.s3.ingested.bucketName=<some_bucket_name_for_ingested>

# AWS S3 bucket name for pushing problematic SCBI deployments which failed to ingest
# required if si.ct.scbi.enableS3Routes is set to true
si.ct.scbi.s3.rejected.bucketName = <some_bucket_name_for_rejected>




########################################################
#
# WCS properties
#
########################################################

# Properties used to identify the WCS CT route logs
si.ct.id=edu.si.wcs
si.ct.pipeline=WCSCameraTrapIngest

# Controls the WCS CT routes to process deployments in a dry-run mode without the actual ingestions into Fedora
# not required and defaults to false
si.ct.wcs.dryrun=false




########################################################
#
# USCBI properties
#
########################################################

# Properties used to identify the USCBI CT route logs
si.ct.id=edu.si.uctingest
si.ct.pipeline=UnifiedCameraTrapIngest

# Controls the USCBI CT routes to process deployments in a dry-run mode without the actual ingestions into Fedora
# not required and defaults to false
si.ct.uscbi.dryrun=false

# Boolean that controls enabling of the automatic S3 sync (pull/push) of the USCBI deployments
# not required and defaults to false
si.ct.uscbi.enableS3Routes=false

# AWS access key used for deployments automatic pulldown from S3 approved buckets
# required if si.ct.uscbi.enableS3Routes is set to true
si.ct.uscbi.aws.accessKey=<some_access_key>

# AWS secret key used for deployments automatic pulldown from S3 approved buckets
# required if si.ct.uscbi.enableS3Routes is set to true
si.ct.uscbi.aws.secretKey=<some_secret_key>

# threshold for the number of processing files in the local file system path for the deployment process directory
# required
si.ct.uscbi.process.dir.threshold=10

# local file system path for ingesting ready to process deployments
# required
si.ct.uscbi.process.dir.path=/opt/sidora/smx/ProcessUnified

# local file system path for staging deployments during automatic s3 pulldown workflow process
# required
si.ct.uscbi.stage.dir.path=/opt/sidora/smx/ProcessUnifiedAWS

# AWS S3 bucket name for pulling down approved USCBI deployments
# required if si.ct.uscbi.enableS3Routes is set to true
si.ct.uscbi.s3.approved.bucketName=<some_bucket_name_for_approved>

# AWS S3 bucket name for pushing successfully ingested USCBI deployments
# required if si.ct.uscbi.enableS3Routes is set to true
si.ct.uscbi.s3.ingested.bucketName=<some_bucket_name_for_ingested>

# AWS S3 bucket name for pushing problematic USCBI deployments which failed to ingest
# required if si.ct.uscbi.enableS3Routes is set to true
si.ct.uscbi.s3.rejected.bucketName = <some_bucket_name_for_rejected>




########################################################
#
# General common properties
#
########################################################

# thread wait time(ms) used in the in-flight check processor to hold next threads while the parent object creation is being processed
# not required and defaults to false
si.ct.thread.wait.time=6000

# Milliseconds before next poll of the file used in file and aws-s3 components
# required
si.ct.file.pollDelay=10000

# An integer to define a maximum messages to gather per poll used in file and aws-s3 components
# required
si.ct.file.maxMessagesPerPoll=1

# A local file system directory path for keeping successfully synched to external storage such as AWS S3 on ingested deployments
# required if si.ct.scbi.enableS3Routes is set to true
si.ct.external.upload.success.dir=.s3_upload_success

# A local file system directory path for keeping successfully synched to external storage such as AWS S3 on failed deployments
# required if si.ct.scbi.enableS3Routes is set to true
si.ct.external.upload.error.dir=.s3_upload_error