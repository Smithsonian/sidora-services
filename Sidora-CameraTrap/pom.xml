<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2015-2016 Smithsonian Institution.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License"); you may not
  ~ use this file except in compliance with the License.You may obtain a copy of
  ~ the License at: http://www.apache.org/licenses/
  ~
  ~ This software and accompanying documentation is supplied without
  ~ warranty of any kind. The copyright holder and the Smithsonian Institution:
  ~ (1) expressly disclaim any warranties, express or implied, including but not
  ~ limited to any implied warranties of merchantability, fitness for a
  ~ particular purpose, title or non-infringement; (2) do not assume any legal
  ~ liability or responsibility for the accuracy, completeness, or usefulness of
  ~ the software; (3) do not represent that use of the software would not
  ~ infringe privately owned rights; (4) do not warrant that the software
  ~ is error-free or will be maintained, supported, updated or enhanced;
  ~ (5) will not be liable for any indirect, incidental, consequential special
  ~ or punitive damages of any kind or nature, including but not limited to lost
  ~ profits or loss of data, on any basis arising from contract, tort or
  ~ otherwise, even if any of the parties has been warned of the possibility of
  ~ such loss or damage.
  ~
  ~ This distribution includes several third-party libraries, each with their own
  ~ license terms. For a complete copy of all copyright and license terms, including
  ~ those of third-party libraries, please see the product release notes.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>edu.si.services</groupId>
        <artifactId>services</artifactId>
        <version>1.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <groupId>edu.si.services.sidora</groupId>
    <artifactId>sidora-cameratrap</artifactId>
    <version>1.0</version>

    <name>SI :: Services :: Sidora :: CameraTrap</name>

    <properties>
        <fedora.home>${project.build.directory}/fedora-home</fedora.home>
        <fuseki.base>${project.build.directory}/fuseki-base</fuseki.base>

        <velocity-tools-version>2.0</velocity-tools-version>
    </properties>

    <dependencies>

        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!--<exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>-->
        </dependency>
        <!--<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- activemq -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-activemq</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <!--<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.hawt</groupId>
            <artifactId>hawtio-springboot</artifactId>
            <version>${hawtio-version}</version>
        </dependency>
        <!--<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>-->
        <!--<dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
        </dependency>-->

        <!-- Camel -->
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-servlet-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-swagger-java-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-http-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-http-common-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-cxf-starter</artifactId>
        </dependency>
        <!--<dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-mail-starter</artifactId>
        </dependency>-->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- The camel-jetty component no longer supports producer (eg to) which has been removed, use camel-http component instead. We have also renamed camel-jetty9 to camel-jetty. The supported scheme is now jetty -->
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-jetty-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-groovy-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-velocity-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity-tools</artifactId>
            <version>${velocity-tools-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-schematron-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-validator-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-xslt-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-xslt-saxon-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-saxon-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-xpath-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-jackson-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-exec-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-stream-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-seda-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-bindy-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-csv-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-jacksonxml-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-jaxb-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-xj-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-aws2-s3-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-aws-s3-starter</artifactId>
            <version>3.8.0</version>
            <scope>test</scope>
        </dependency>

        <!-- ActiveMQ -->
        <!-- If you are using the activemq-camel component, then you should migrate to use camel-activemq component, where the component name has changed from org.apache.activemq.camel.component.ActiveMQComponent to org.apache.camel.component.activemq.ActiveMQComponent -->
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-activemq-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.activemq</groupId>
                    <artifactId>activemq-broker</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


        <!-- Sidora Services -->
        <dependency>
            <groupId>edu.si.services.camel</groupId>
            <artifactId>FedoraRepo</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>edu.si.services.camel</groupId>
            <artifactId>FcrepoRest</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>edu.si.services.beans</groupId>
            <artifactId>VelocityToolsHandler</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>edu.si.services.camel</groupId>
            <artifactId>Reader</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>edu.si.services.camel</groupId>
            <artifactId>Thumbnailator</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>edu.si.services.camel</groupId>
            <artifactId>Extractor</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>edu.si.services.beans</groupId>
            <artifactId>Excel</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>edu.si.services.beans</groupId>
            <artifactId>FITS-Servlet</artifactId>
            <version>1.0</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--<dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>-->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test-spring-junit5</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-configuration2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>xmlunit</groupId>
            <artifactId>xmlunit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.woodstox</groupId>
            <artifactId>woodstox-core-asl</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Integration Testing gear -->
        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-fuseki-war</artifactId>
            <type>war</type>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-log4j12</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>edu.si.trippi</groupId>
            <artifactId>trippi-sparql-fcrepo-webapp</artifactId>
            <type>war</type>
            <scope>test</scope>
        </dependency>

        <!--<dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-script</artifactId>
            <version>${camel.version}</version>
            <scope>test</scope>
        </dependency>-->


    </dependencies>

    <build>
        <defaultGoal>install</defaultGoal>

        <resources>
            <!-- copy the system properties file to target dir -->
            <resource>
                <directory>config</directory>
                <targetPath>${project.build.directory}/config</targetPath>
                <filtering>true</filtering>
            </resource>

            <resource>
                <directory>../FaceBlurrer</directory>
                <targetPath>${project.build.directory}/config/FaceBlurrer</targetPath>
                <includes>
                    <include>FaceBlurrer.py</include>
                    <include>haarcascades/**</include>
                </includes>
            </resource>
        </resources>

        <!-- Copy test resources to output folder target/test-classes. -->
        <testResources>
            <!-- Don't forget to specify the default test resources directory. -->
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>

            <testResource>
                <directory>config</directory>
                <targetPath>${project.build.directory}/test-classes/config</targetPath>
                <filtering>true</filtering>
                <excludes>
                    <exclude>camel/**</exclude>
                </excludes>
            </testResource>

            <testResource>
                <directory>../FaceBlurrer</directory>
                <targetPath>${project.build.directory}/test-classes/config/FaceBlurrer</targetPath>
                <includes>
                    <include>FaceBlurrer.py</include>
                    <include>haarcascades/**</include>
                </includes>
            </testResource>

            <!--<testResource>
                <directory>../Sidora-Test-Utils/src/test/resources/fedora-home</directory>
                <targetPath>${project.build.directory}/fedora-home</targetPath>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>../Sidora-Test-Utils/src/test/resources/fuseki-base</directory>
                <targetPath>${project.build.directory}/fuseki-base</targetPath>
                <filtering>true</filtering>
            </testResource>-->

            <!--<testResource>
                <directory>${basedir}/src/test/resources/foxml</directory>
                <targetPath>${project.build.directory}/foxml</targetPath>
                <filtering>true</filtering>
            </testResource>-->

            <!--<testResource>
                <directory>..</directory>
                <targetPath>${project.build.directory}/test-classes/etc</targetPath>
                <includes>
                    <include>test.properties</include>
                </includes>
                <filtering>true</filtering>
            </testResource>-->
        </testResources>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>JPG</nonFilteredFileExtension>
                        <nonFilteredFileExtension>zip</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>

            <!-- Reserve network ports for integration testing. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- we choose this phase to ensure that the chosen port number is available for test resource filtering, specifically
                          into fedora.fcfg -->
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <configuration>
                            <portNames>
                                <portName>dynamic.test.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/*_IT</exclude>
                    </excludes>
                    <systemPropertyVariables>
                        <baseDir>${project.basedir}</baseDir>
                        <buildDirectory>${project.build.directory}</buildDirectory>
                        <dynamic.test.port>${dynamic.test.port}</dynamic.test.port>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <dynamic.test.port>${dynamic.test.port}</dynamic.test.port>
                        <baseDir>${project.basedir}</baseDir>
                        <buildDirectory>${project.build.directory}</buildDirectory>
                    </systemPropertyVariables>
                    <includes>
                        <include>**/*_IT</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <configuration>
                    <container>
                        <containerId>tomcat7x</containerId>
                        <type>embedded</type>
                        <systemProperties>
                            <fedora.home>${fedora.home}</fedora.home>
                            <FUSEKI_BASE>${fuseki.base}</FUSEKI_BASE>
                            <!-- keep Apache Derby as quiet as possible -->
                            <derby.stream.error.field>java.lang.System.err</derby.stream.error.field>
                            <derby.stream.error.logSeverityLevel>5000</derby.stream.error.logSeverityLevel>
                        </systemProperties>
                        <log>${project.build.directory}/cargo.log</log>
                        <output>${project.build.directory}/cargo-output.log</output>
                    </container>
                    <configuration>
                        <properties>
                            <cargo.logging>high</cargo.logging>
                            <cargo.servlet.uriencoding>UTF-8</cargo.servlet.uriencoding>
                            <cargo.jvmargs>-Xmx512m</cargo.jvmargs>
                            <cargo.servlet.port>${dynamic.test.port}</cargo.servlet.port>
                            <!-- fire AJP into /dev/null -->
                            <cargo.tomcat.ajp.port>0</cargo.tomcat.ajp.port>
                        </properties>
                    </configuration>
                    <deployer>
                        <!-- empty deployer element prevents Cargo from trying to deploy our project, which is a bundle, into
                        Tomcat -->
                    </deployer>
                    <deployables>
                        <deployable>
                            <groupId>org.apache.jena</groupId>
                            <artifactId>jena-fuseki-war</artifactId>
                            <type>war</type>
                        </deployable>
                        <deployable>
                            <groupId>edu.si.trippi</groupId>
                            <artifactId>trippi-sparql-fcrepo-webapp</artifactId>
                            <type>war</type>
                        </deployable>
                    </deployables>
                </configuration>
                <executions>
                    <execution>
                        <id>start-tomcat</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-tomcat</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <addResources>false</addResources>
                            <executable>true</executable>
                        </configuration>
                        <executions>
                            <execution>
                                <id>executable-jar</id>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dockerfile</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <addResources>false</addResources>
                            <layers>
                                <enabled>true</enabled>
                            </layers>
                        </configuration>
                        <executions>
                            <execution>
                                <id>layerd-jar</id>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>${dockerfile-maven-plugin-version}</version>
                        <configuration>
                            <verbose>true</verbose>
                            <repository>${project.artifactId}</repository>
                            <tag>${project.version}</tag>
                            <buildArgs>
                                <UID>${uid}</UID>
                                <GID>${gid}</GID>
                                <USER>${user}</USER>
                            </buildArgs>
                            <skipDockerInfo>true</skipDockerInfo>
                        </configuration>
                        <executions>
                            <execution>
                                <id>dockerfile-build-image</id>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>build-cnb-image</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <image>
                                <name>${project.artifactId}:${project.version}</name>
                            </image>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build-cnb-image</id>
                                <goals>
                                    <goal>build-image</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
