#
# Copyright 2018-2019 Smithsonian Institution.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License.You may obtain a copy of
# the License at: http://www.apache.org/licenses/
#
# This software and accompanying documentation is supplied without
# warranty of any kind. The copyright holder and the Smithsonian Institution:
# (1) expressly disclaim any warranties, express or implied, including but not
# limited to any implied warranties of merchantability, fitness for a
# particular purpose, title or non-infringement; (2) do not assume any legal
# liability or responsibility for the accuracy, completeness, or usefulness of
# the software; (3) do not represent that use of the software would not
# infringe privately owned rights; (4) do not warrant that the software
# is error-free or will be maintained, supported, updated or enhanced;
# (5) will not be liable for any indirect, incidental, consequential special
# or punitive damages of any kind or nature, including but not limited to lost
# profits or loss of data, on any basis arising from contract, tort or
# otherwise, even if any of the parties has been warned of the possibility of
# such loss or damage.
#
# This distribution includes several third-party libraries, each with their own
# license terms. For a complete copy of all copyright and license terms, including
# those of third-party libraries, please see the product release notes.
#

spring.profiles.active=test
spring.profiles.include=blur,sql

########################################################
#
# Sidora MCI Spring Boot properties
#
########################################################

# Spring Boot Configs
spring.application.name=sidora-mci

# Spring Boot Admin Configs
spring.boot.admin.client.instance.name=${spring.application.name}
#spring.boot.admin.ui.title=Sidora MCI Admin
#spring.application.admin.enabled=true
#spring.boot.admin.context-path=/admin
#spring.boot.admin.client.enabled=true
#spring.boot.admin.client.url=http://localhost:8100/admin
#spring.boot.admin.client.username=${si.fedora.user}
#spring.boot.admin.client.password=${si.fedora.password}

# Spring Security Settings
#spring.security.user.name=${si.fedora.user}
#spring.security.user.password=${si.fedora.password}
#management.security.enabled=false

# Tomcat Settings
server.port=8105
server.tomcat.basedir=tomcat
server.tomcat.accesslog.directory=logs
server.servlet.session.persistent=false
server.servlet.session.store-dir=./

# Actuator Settings
management.endpoints.web.exposure.include=*
management.endpoint.shutdown.enabled=true
management.endpoint.health.show-details=always
management.health.defaults.enabled=true
management.health.jms.enabled=false
management.health.db.enabled=false
management.endpoint.logfile.external-file=logs/${spring.application.name}.log
spring.devtools.restart.enabled=true

# Hawtio Configs
management.endpoint.jolokia.enabled=true
endpoints.hawtio.sensitive=false
hawtio.authenticationEnabled=false
logging.level.io.hawt=INFO

spring.jackson.serialization.indent_output= true

# Logging
spring.output.ansi.enabled=ALWAYS
logging.config=config/logback-spring.xml
logging.file.path=logs
logging.file.name=${logging.file.path}/${spring.application.name}.log
logging.file.max-history=30
logging.file.total-size-cap=10GB

########################################################
# Camel configs
########################################################

# To keep the main thread blocked so that Camel stays up
camel.springboot.main-run-controller=true

# Enable camel HealthCheck integration with spring's health indicator.
camel.health.check.indicator.enabled = true

# Global option to enable/disable Camel extended health check for routes, default is false
camel.health.check.routes.enabled = true

# Global option to enable/disable camel health bean, default is true.
camel.health.enabled = true

# Sets whether endpoint runtime statistics is enabled (gathers runtime usage of each incoming and outgoing endpoints).
camel.springboot.endpoint-runtime-statistics-enabled = true
camel.health.check.service.enabled=true
# turn off read-only so we can stop/start the Camel routes
management.endpoint.camelroutes.read-only = false
management.endpoint.camelroutes.enabled=true
management.info.camel.enabled=true
management.endpoint.camelroutecontroller.enabled=true
management.info.camel.verbose=true

#TODO: why when using xpath we get javax.xml.transform.TransformerException: Could not find function: string-join without explicitly setting net.sf.saxon.xpath.XPathFactoryImp in system property, setting here does not seem to work.
camel.language.xpath.saxon=true

#scan path for camel xml file (required)
#camel.springboot.xml-routes = file:config/camel/*.xml

camel.dataformat.json-jackson.pretty-print = true

#spring.main.allow-bean-definition-overriding=true

# Camel servlet auto configuration. See org.apache.camel.component.servlet.springboot.ServletMappingConfiguration
camel.component.servlet.mapping.contextPath=/api/*
camel.springboot.name=${spring.application.name}

# enable JMX which allows to also control health check
camel.springboot.jmx-enabled = true
camel.springboot.message-history=true
camel.springboot.stream-caching-enabled=true

########################################################
# Health Indicator configs
########################################################
## Spring Data Solr Settings
#spring.data.solr.host=http://localhost:8090/solr
#
#spring.datasource.driver-class-name=${mysql.solr.db.driverClassName}
#spring.datasource.url= jdbc:mysql://${mysql.solr.reindex.host}:${mysql.solr.reindex.port}/${mysql.solr.reindex.database}
#spring.datasource.username=${mysql.solr.reindex.username}
#spring.datasource.password=${mysql.solr.reindex.password}
jaxpp