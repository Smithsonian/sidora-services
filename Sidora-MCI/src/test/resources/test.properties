edu.si.mci=edu.si.mci

##########################################################################
#
# Default User pid/name to use when the mci folder holder does not have an account yet or they are not found
#
##########################################################################
mci.default.owner.pid=si-user:57
#mci.default.owner.pid=si-user:79
#mci.default.owner.pid=si-user:95
mci.default.owner.name=someUN

# The REST endpoint
sidora.mci.service.address=${si.sidora.mci.host}

##########################################################################
#
# The fedora configuration
#
###########################################################################
si.fedora.host=${si.fedora.host}
si.fedora.user=${si.fedora.user}
si.fedora.password=${si.fedora.password}

##########################################################################
#
# The FITS host configuration
#
###########################################################################
si.fits.host = ${si.fits.host}

##########################################################################
#
# A fuseki endpoint with datastore location included path (i.e. http://localhost:9080/fuseki/fedora3)
#
###########################################################################
si.fuseki.endpoint = ${si.fuseki.host}

##########################################################################
#
# Camel SQL Component Data Source configuration
#
# Derby Testing Config
derby.db.driverClassName=org.apache.derby.jdbc.EmbeddedDriver
derby.db.url=jdbc:derby:memory:sidoraDerbyDb;create=true
#
##########################################################################
mci.db.driverClassName=com.mysql.jdbc.Driver

# Drupal MySql database configuration for checking for valid users and getting there user pid
#drupal.db.host=si-oris-app01.si.edu
drupal.db.host=<some_host>
drupal.db.port=3306
drupal.db.name=<some-db>
drupal.db.username=<some-un>
drupal.db.password=<some-pw>
drupal.db.url=jdbc:mysql://${drupal.db.host}:${drupal.db.port}/${drupal.db.name}?zeroDateTimeBehavior=convertToNull&autoReconnect=true
drupal.db.validationQuery=select 1 as dbcp_connections_test
drupal.db.testOnBarrow=true
drupal.db.testWhileIdle=true

# Sidora MySql database for persisting incoming http requests
request.db.host=<some_host>
request.db.port=3306
request.db.name=<some-db>
request.db.username=<some-un>
request.db.password=<some-pw>
request.db.url=jdbc:mysql://${request.db.host}:${request.db.port}/${request.db.name}?zeroDateTimeBehavior=convertToNull&autoReconnect=true
request.db.validationQuery=select 1 as dbcp_connections_test
request.db.testOnBarrow=true
request.db.testWhileIdle=true

##########################################################################
#
# Redelivery Policy for mci
# Note: For faster testing set the redeliveryDelay to 0
###########################################################################

# The following config retries for aprox 25min.
mci.redeliveryDelay=0
mci.maximumRedeliveries=10
mci.backOffMultiplier=2
mci.useExponentialBackOff=true
mci.retryAttemptedLogLevel=WARN
mci.retriesExhaustedLogLevel=ERROR
mci.logExhausted=true

##########################################################################
#
# sql for creating new batch processing requests
#
##########################################################################

sql.find.mci.user.pid = select name, convert(left(mid(data,instr(data,"islandora_user_pid") %2B 26,40), instr(mid(data,instr(data,"islandora_user_pid") %2B 26,40), "\\"")%2D 1) using utf8) user_pid from users where instr(data,"islandora_user_pid") %3E 0 and name = :#mciFolderHolder

#sql.find.mci.user.pid = select name, SUBSTR(SUBSTR(data, LOCATE('islandora_user_pid', data) + 26, 40), 1, LOCATE('"', SUBSTR(data, LOCATE('islandora_user_pid', data) + 26, 40)) - 1) user_pid from users where LOCATE('islandora_user_pid', data) > 0 and name = :#mciFolderHolder

mci.sql.getData = select data from drupal7.users where name = :#mciFolderHolder


##########################################################################
#
# Queries for Persisting Requests
#
##########################################################################

sql.addRequest = INSERT INTO sidora.camelRequests (exchangeId, messageId, camelId, headers, body) VALUES('${exchangeId}', '${id}', '${camelId}', :#incomingHeaders, :#mciProjectXML)

sql.consumeRequest = update sidora.camelRequests set request_consumed = true where (exchangeId = '${property.CamelCorrelationId}')

sql.completeRequest = update sidora.camelRequests set request_complete = true where (exchangeId = '${property.CamelCorrelationId}')

sql.errorProcessingRequest = update sidora.camelRequests set error_processing = CONCAT_WS(', ', error_processing, :#error) where (exchangeId = '${property.CamelCorrelationId}' or exchangeId = '${exchangeId}')
sql.createRequestTable = CREATE TABLE IF NOT EXISTS sidora.camelRequests (
correlationId = CHAR(36) NOT NULL,
exchangeId = CHAR(255) NOT NULL,
messageId = CHAR(255) NOT NULL,
camelId = CHAR(255) NOT NULL,
headers = blob NOT NULL,
body = blob NOT NULL,
request_consumed = BOOLEAN NOT NULL DEFAULT false,
request_complete = BOOLEAN NOT NULL DEFAULT false,
error_processing = TEXT,
created = TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
updated = DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY = KEY (correlationId));

