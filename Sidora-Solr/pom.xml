<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>services</artifactId>
        <groupId>edu.si.services</groupId>
        <version>1.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <artifactId>sidora-solr</artifactId>
    <packaging>bundle</packaging>

    <name>SI :: Services :: Sidora :: Solr</name>

    <description>Sidora Solr provides event driven create, update, and delete operation to Solr Indexes via Fedora Messaging or REST</description>

    <properties>
        <http-components.version>4.4</http-components.version>
        <servicemix.osgi.dynamic.import>*</servicemix.osgi.dynamic.import>
        <!-- Unit Test Properties-->
        <karaf.home>${project.build.directory}/test-classes</karaf.home>
        <!--<solr.host>http://${test.solr.host}</solr.host>-->
        <fedora.home>${project.build.directory}/fedora-home</fedora.home>
        <fuseki.base>${project.build.directory}/fuseki-base</fuseki.base>
    </properties>

    <dependencies>
        <!-- must be first to avoid library conflict, Only needed during testing so scope is test -->
        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm-all</artifactId>
            <!--<scope>test</scope>-->
        </dependency>

        <!--  osgi -->
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.compendium</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Camel -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-blueprint</artifactId>
            <scope>provided</scope>
        </dependency>
        <!--<dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-http</artifactId>
            <scope>provided</scope>
        </dependency>-->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-http4</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-saxon</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-groovy</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-velocity</artifactId>
            <scope>provided</scope>
        </dependency>
        <!--<dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-solr</artifactId>
            <scope>provided</scope>
        </dependency>-->

        <!-- Database -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jdbc</artifactId>
            <version>${camel.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-sql</artifactId>
            <version>${camel.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>10.11.1.1</version>
            <scope>test</scope>
        </dependency>

        <!-- CXF -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-cxf</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Will pull other CXF modules such cxf-core and cxf-rt-transports-http, check the pom for more information -->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxrs</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http-jetty</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-extension-providers</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-cxf-transport</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Databinding -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
            <scope>provided</scope>
        </dependency>

        <!--<dependency>
            <groupId>edu.si.services.camel</groupId>
            <artifactId>FedoraRepo</artifactId>
            <version>1.0</version>
            <scope>provided</scope>
        </dependency>-->
        <!--<dependency>
            <groupId>edu.si.services.camel</groupId>
            <artifactId>FcrepoRest</artifactId>
            <version>1.0.0</version>
            <scope>provided</scope>
        </dependency>-->

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <!-- Test Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test-blueprint</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- ActiveMQ test gear -->
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-camel</artifactId>
            <scope>provided</scope>
            <!-- break the cyclic dependency to camel-jms which otherwise would baffle the maven eclipse plugin -->
            <!--<exclusions>
                <exclusion>
                    <groupId>org.apache.camel</groupId>
                    <artifactId>camel-jms</artifactId>
                </exclusion>
            </exclusions>-->
        </dependency>

        <dependency>
            <groupId>org.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
            <version>1.5.0</version>
            <scope>test</scope>
        </dependency>

        <!--<dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-lucene</artifactId>
            <version>${camel.version}</version>
            <scope>test</scope>
        </dependency>-->

        <!-- Lucene -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
            <version>7.6.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-test-framework</artifactId>
            <version>7.6.0</version>
            <scope>test</scope>
        </dependency>

        <!-- Solr -->
        <!--<dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-core</artifactId>
            &lt;!&ndash;<version>7.4.0</version>&ndash;&gt;
            <version>7.6.0</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-slf4j-impl</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-1.2-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>-->
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-solrj</artifactId>
            <!--<version>7.4.0</version>-->
            <version>7.6.0</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--<dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-test-framework</artifactId>
            &lt;!&ndash;<version>7.4.0</version>&ndash;&gt;
            <version>7.6.0</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-slf4j-impl</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-1.2-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>-->
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity-tools</artifactId>
            <version>2.0</version>
            <scope>test</scope>
        </dependency>

        <!--<dependency>
            <groupId>org.codehaus.woodstox</groupId>
            <artifactId>woodstox-core-asl</artifactId>
            <scope>provided</scope>
        </dependency>-->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient-osgi</artifactId>
            <version>4.5.3</version>
            <scope>provided</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.servicemix.bundles/org.apache.servicemix.bundles.solr-solrj -->
        <dependency>
            <groupId>org.apache.servicemix.bundles</groupId>
            <artifactId>org.apache.servicemix.bundles.solr-solrj</artifactId>
            <version>7.6.0_1</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <build>
        <defaultGoal>install</defaultGoal>

        <!--The properties file that will be used for tests and token replacement during resource filtering-->
        <!--<filters>
            <filter>${test.properties}</filter>
        </filters>-->

        <!-- Copy test resources to output folder target/test-classes -->
        <testResources>
            <!-- don't forget to specify the default test resources directory -->
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>

            <!-- add the Sidora-Solr Karaf-config directories -->
            <testResource>
                <directory>Karaf-Config</directory>
                <targetPath>${karaf.home}</targetPath>
                <filtering>true</filtering>
            </testResource>
            <!-- add the Camera Trap Route directory as resources -->
            <testResource>
                <directory>../Routes/Camera Trap/Karaf-config/etc</directory>
                <targetPath>${karaf.home}/etc</targetPath>
                <filtering>true</filtering>
            </testResource>

            <testResource>
                <directory>../</directory>
                <targetPath>${karaf.home}/etc</targetPath>
                <includes>
                    <include>test.properties</include>
                </includes>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>

            <!-- to generate the MANIFEST-FILE of the bundle -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                        <Bundle-Description>${project.description}</Bundle-Description>
                        <Private-Package>edu.si.services.*</Private-Package>
                        <Import-Package>org.apache.camel.osgi,*;resolution:=optional</Import-Package>
                        <DynamicImport-Package>${servicemix.osgi.dynamic.import}</DynamicImport-Package>
                    </instructions>
                </configuration>
            </plugin>

            <!-- reserve network ports for integration testing -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <configuration>
                    <portNames>
                        <portName>dynamic.test.port</portName>
                    </portNames>
                </configuration>
                <executions>
                    <execution>
                        <!-- we choose this phase to ensure that the chosen port number is available for test resource filtering, specifically
                          into fedora.fcfg -->
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/*_IT</exclude>
                    </excludes>
                    <systemPropertyVariables>
                        <buildDirectory>${project.build.directory}</buildDirectory>
                        <dynamic.test.port>${dynamic.test.port}</dynamic.test.port>
                        <karaf.home>${karaf.home}</karaf.home>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <karaf.home>${karaf.home}</karaf.home>
                        <dynamic.test.port>${dynamic.test.port}</dynamic.test.port>
                        <buildDirectory>${project.build.directory}</buildDirectory>
                    </systemPropertyVariables>
                    <includes>
                        <include>**/*_IT</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- to run the example using mvn camel:run -->
            <plugin>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-maven-plugin</artifactId>
                <configuration>
                    <useBlueprint>true</useBlueprint>
                    <applicationContextUri>sidora-solr-route.xml</applicationContextUri>
                    <!--<logClasspath>true</logClasspath>-->
                    <configAdminFileName>${project.build.directory}/test-classes/etc/edu.si.sidora.solr.cfg</configAdminFileName>
                    <configAdminPid>edu.si.sidora.solr</configAdminPid>
                    <systemProperties>
                        <property>
                            <key>karaf.home</key>
                            <value>${project.build.directory}/test-classes</value>
                        </property>
                    </systemProperties>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
